# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-22 09:34
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CollectionDetails',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dtlid', models.IntegerField(blank=True, db_column='DTLID', null=True)),
                ('rmasid', models.IntegerField(blank=True, db_column='RMASID', null=True)),
                ('receipt_number', models.IntegerField(blank=True, db_column='RECPTNO', null=True)),
                ('invoice_id', models.IntegerField(blank=True, db_column='INVID', null=True)),
                ('gl_code', models.IntegerField(blank=True, db_column='GLCODE', null=True)),
                ('bcgs', models.IntegerField(blank=True, db_column='BCGS', null=True)),
                ('bint', models.IntegerField(blank=True, db_column='BINT', null=True)),
                ('othamt', models.IntegerField(blank=True, db_column='OTHAMT', null=True)),
                ('received_amount', models.IntegerField(blank=True, db_column='RECDAMT', null=True)),
                ('cgst_per', models.IntegerField(blank=True, db_column='CGSTPER', null=True)),
                ('cgst_amount', models.IntegerField(blank=True, db_column='CGSTAMT', null=True)),
                ('sgst_per', models.IntegerField(blank=True, db_column='SGSTPER', null=True)),
                ('sgst_amount', models.IntegerField(blank=True, db_column='SGSTAMT', null=True)),
                ('igst_per', models.IntegerField(blank=True, db_column='IGSTPER', null=True)),
                ('igst_amount', models.IntegerField(blank=True, db_column='IGST', null=True)),
                ('total_tax_value', models.IntegerField(blank=True, db_column='TAXABLE_VALUE', null=True)),
            ],
            options={
                'db_table': 'GCP_FT72_RECEIPT_DTL',
                'verbose_name_plural': 'Collection Details',
            },
        ),
        migrations.CreateModel(
            name='CollectionHeader',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sfa_receipt_id', models.IntegerField(blank=True, db_column='SFAID', null=True)),
                ('rmasid', models.IntegerField(blank=True, db_column='RMASID', null=True)),
                ('sl_no', models.IntegerField(blank=True, db_column='SLNO', null=True)),
                ('receipt_number', models.IntegerField(blank=True, db_column='RECPTNO', null=True)),
                ('receipt_date', models.DateField(db_column='RECPTDT')),
                ('m_receipt_number', models.IntegerField(blank=True, db_column='MRECPTNO', null=True)),
                ('m_receipt_date', models.DateField(blank=True, db_column='MRECPTDT', null=True)),
                ('voucher_type', models.CharField(blank=True, db_column='VOUTYPE', max_length=3, null=True)),
                ('pay_code', models.IntegerField(blank=True, db_column='PAYCODE', null=True)),
                ('doc_number', models.CharField(blank=True, db_column='DOCNO', max_length=10, null=True)),
                ('doc_date', models.DateField(blank=True, db_column='DOCDT', null=True)),
                ('bank_name', models.CharField(blank=True, db_column='BANKNAME', max_length=25, null=True)),
                ('br_name', models.CharField(blank=True, db_column='BRNAME', max_length=15, null=True)),
                ('received_amount', models.IntegerField(db_column='RECDAMT')),
                ('advance_code', models.IntegerField(blank=True, db_column='ADVCODE', null=True)),
                ('advance_amount', models.IntegerField(blank=True, db_column='ADVAMT', null=True)),
                ('bgl_code', models.IntegerField(blank=True, db_column='BGLCODE', null=True)),
                ('bcgs_code', models.IntegerField(blank=True, db_column='BCGSCODE', null=True)),
                ('bint_code', models.IntegerField(blank=True, db_column='BINTCODE', null=True)),
                ('deposit_flag', models.IntegerField(blank=True, db_column='DEPOSITFLAG', null=True)),
                ('bonus_flag', models.IntegerField(blank=True, db_column='BOUNSFLAG', null=True)),
                ('round_plus', models.IntegerField(blank=True, db_column='ROUNDPLUS', null=True)),
                ('round_minus', models.IntegerField(blank=True, db_column='ROUNDMINUS', null=True)),
                ('c_flag', models.IntegerField(blank=True, db_column='CFLAG', null=True)),
                ('cash_receipt_number', models.IntegerField(blank=True, db_column='CASH_RECEIPTNO', null=True)),
                ('cash_receipt_date', models.DateField(blank=True, db_column='CASH_RECEIPTDT', null=True)),
                ('remarks', models.CharField(blank=True, db_column='REMARKS', max_length=45, null=True)),
                ('dis_receipt_number', models.IntegerField(blank=True, db_column='DIS_RECPTNO', null=True)),
                ('place_supply', models.CharField(blank=True, db_column='PLACE_SUPPLY', max_length=30, null=True)),
                ('courier_charges', models.IntegerField(blank=True, db_column='COUR_CHARG', null=True)),
                ('inter_state', models.CharField(blank=True, db_column='INTER_STAT', max_length=1, null=True)),
                ('clearing_flag', models.IntegerField(blank=True, db_column='CLEARING_FLAG', null=True)),
            ],
            options={
                'db_table': 'GCP_FT71_RECEIPT_MAS',
                'verbose_name_plural': 'Collection Header',
            },
        ),
        migrations.CreateModel(
            name='CustomerMaster',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('customer_code', models.IntegerField(blank=True, db_column='CUSTCODE', null=True)),
                ('sfa_temp_id', models.CharField(blank=True, db_column='TEMPID', max_length=50, null=True, unique=True)),
                ('customer_name', models.CharField(db_column='CUSTNAME', max_length=50)),
                ('customer_add1', models.CharField(blank=True, db_column='CUSTADD1', max_length=55, null=True)),
                ('customer_add2', models.CharField(blank=True, db_column='CUSTADD2', max_length=55, null=True)),
                ('customer_city', models.CharField(blank=True, db_column='CUSTCITY', max_length=35, null=True)),
                ('customer_pincode', models.IntegerField(blank=True, db_column='CUSTPIN', null=True)),
                ('state_code', models.CharField(blank=True, db_column='STATCODE', max_length=2, null=True)),
                ('customer_phonenumber', models.CharField(db_column='CUSTPHNO', max_length=60)),
                ('customer_mail', models.CharField(blank=True, db_column='CUSTMAIL', max_length=35, null=True)),
                ('mobile_phonenumber', models.CharField(blank=True, db_column='MOBPHNO', max_length=20, null=True)),
                ('credit_days', models.IntegerField(blank=True, db_column='CRDAYS', null=True)),
                ('credit_limit', models.IntegerField(blank=True, db_column='CRLIMIT', null=True)),
                ('designation', models.CharField(blank=True, db_column='DESIG', max_length=25, null=True)),
                ('mobile', models.CharField(blank=True, db_column='MOBILE', max_length=25, null=True)),
                ('landline', models.CharField(blank=True, db_column='LANDLINE', max_length=25, null=True)),
                ('mail', models.CharField(blank=True, db_column='EMAIL', max_length=30, null=True)),
                ('short_name', models.CharField(blank=True, db_column='SHORTNAME', max_length=12, null=True)),
                ('depot', models.IntegerField(blank=True, db_column='DEPOT', null=True)),
                ('customer_id', models.IntegerField(blank=True, db_column='CUSTID', null=True)),
                ('pan', models.CharField(blank=True, db_column='PAN', max_length=15, null=True)),
                ('gstin', models.CharField(blank=True, db_column='GSTIN', max_length=15, null=True)),
            ],
            options={
                'db_table': 'GCP_SM17_CUS',
                'verbose_name_plural': 'Customer Master',
            },
        ),
        migrations.CreateModel(
            name='DepoMaster',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('depo_code', models.IntegerField(db_column='DEPOCODE', primary_key=True, serialize=False)),
                ('depo_name', models.CharField(db_column='DEPONAME', max_length=25)),
                ('state_code', models.CharField(db_column='STATCODE', max_length=2)),
                ('depo_add1', models.CharField(db_column='DEPOADD1', max_length=55)),
                ('depo_add2', models.CharField(db_column='DEPOADD2', max_length=55)),
                ('depo_add3', models.CharField(db_column='DEPOADD3', max_length=55)),
                ('depo_pincode', models.IntegerField(db_column='DEPOPIN')),
                ('depo_phonenumber', models.CharField(db_column='DEPOPHNO', max_length=60)),
                ('depo_fax', models.CharField(db_column='DEPOFAX', max_length=60)),
                ('depo_mail', models.CharField(db_column='DEPOMAIL', max_length=35)),
                ('gst_registered_date', models.DateField(db_column='GSTREGDT')),
                ('price_code', models.IntegerField(db_column='PRICECOD')),
                ('gstin', models.CharField(db_column='GSTIN', max_length=15)),
            ],
            options={
                'db_table': 'GCP_SM06_DEP',
                'verbose_name_plural': 'Depo Master',
            },
        ),
        migrations.CreateModel(
            name='DivisionMaster',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('division_code', models.IntegerField(db_column='DIVNCODE', primary_key=True, serialize=False)),
                ('division_name', models.CharField(db_column='DIVNNAME', max_length=25)),
                ('division_add1', models.CharField(db_column='DIVNADD1', max_length=35)),
                ('division_add2', models.CharField(db_column='DIVNADD2', max_length=35)),
                ('division_add3', models.CharField(db_column='DIVNADD3', max_length=35)),
                ('division_pincode', models.CharField(db_column='DIVNPIN', max_length=10)),
                ('division_phonenumber', models.CharField(db_column='DIVNPHNO', max_length=60)),
                ('division_fax', models.CharField(db_column='DIVNFAX', max_length=60)),
                ('division_mail', models.CharField(db_column='DIVNMAIL', max_length=25)),
            ],
            options={
                'db_table': 'GCP_SM01_DIV',
                'verbose_name_plural': 'Division Master',
            },
        ),
        migrations.CreateModel(
            name='InvoiceDetails',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('product_quantity', models.IntegerField(db_column='PRODQTY')),
                ('product_rate', models.IntegerField(db_column='PRODRATE')),
                ('amount', models.IntegerField(db_column='AMT')),
                ('discount_percentage', models.IntegerField(db_column='DISCPERC')),
                ('discount_amount', models.IntegerField(db_column='DISCAMT')),
                ('tax_amount', models.IntegerField(db_column='TAXAMT')),
                ('net_amount', models.IntegerField(db_column='NETAMT')),
                ('ret_quantity', models.IntegerField(db_column='RETQTY')),
                ('order_number', models.IntegerField(db_column='ORDNO')),
                ('order_date', models.DateField(db_column='ORDDT')),
                ('total', models.IntegerField(db_column='TOT')),
                ('cgst_per', models.IntegerField(db_column='CGSTPER')),
                ('cgst_amount', models.IntegerField(db_column='CGSTAMT')),
                ('sgst_per', models.IntegerField(db_column='SGSTPER')),
                ('sgst_amount', models.IntegerField(db_column='SGSTAMT')),
                ('igst_per', models.IntegerField(db_column='IGSTPER')),
                ('igst_amount', models.IntegerField(db_column='IGSTAMT')),
                ('item_type', models.CharField(db_column='ITEMTYPE', max_length=1)),
            ],
            options={
                'db_table': 'GCP_ST17_INV_DTL',
                'verbose_name_plural': 'Invoice Details',
            },
        ),
        migrations.CreateModel(
            name='InvoiceHeader',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('invoice_number', models.IntegerField(db_column='INVNO')),
                ('invoice_date', models.DateField(db_column='INVDT')),
                ('invoice_type', models.CharField(db_column='INVTYPE', max_length=1)),
                ('allocation_number', models.IntegerField(db_column='ALLOCNO')),
                ('allocation_date', models.DateField(db_column='ALLOCDT')),
                ('cancel', models.CharField(db_column='CANCEL', max_length=1)),
                ('bank_code', models.IntegerField(db_column='BNKCODE')),
                ('bank_document_date', models.DateField(db_column='BNKDOCDT')),
                ('balance_amount', models.IntegerField(db_column='BALAMT')),
                ('total', models.IntegerField(db_column='TOT')),
                ('total_discount', models.IntegerField(db_column='TOT_DISC')),
                ('remarks', models.CharField(db_column='REMARKS', max_length=100)),
                ('roundoff', models.IntegerField(db_column='ROUNDEDOFF')),
                ('total_product_value', models.IntegerField(db_column='TOT_PRODVAL')),
                ('total_discount_value', models.IntegerField(db_column='TOT_DISCOUNT')),
                ('total_tax_value', models.IntegerField(db_column='TOT_TAXABLE_VALUE')),
                ('total_tax_amount', models.IntegerField(db_column='TOT_TAXAMT')),
                ('net_amount', models.IntegerField(db_column='NETAMT')),
                ('advance_amount', models.IntegerField(db_column='ADVAMT')),
                ('credit_amount', models.IntegerField(db_column='CRAMT')),
                ('dr_amount', models.IntegerField(db_column='DRAMT')),
                ('paid_amount', models.IntegerField(db_column='PAIDAMT')),
                ('invoice_amount', models.IntegerField(db_column='INVAMT')),
                ('other_charges', models.IntegerField(db_column='OTHER_CHGS')),
                ('gross_weight', models.IntegerField(db_column='GROSSWT')),
                ('total_cgst_amount', models.IntegerField(db_column='TOT_CGSTAMT')),
                ('total_sgst_amount', models.IntegerField(db_column='TOT_SGSTAMT')),
                ('total_igst_amount', models.IntegerField(db_column='TOT_IGSTAMT')),
                ('invoice_gstin', models.CharField(db_column='INV_GSTIN', max_length=15)),
            ],
            options={
                'db_table': 'GCP_ST16_INV_HDR',
                'verbose_name_plural': 'Invoice Header',
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('market_code', models.IntegerField(db_column='MKTCODE')),
                ('market_name', models.CharField(db_column='MKTNAME', max_length=25)),
                ('price_code', models.IntegerField(db_column='PRICECOD')),
            ],
            options={
                'db_table': 'GCP_SM03_MKT',
                'verbose_name_plural': 'Market',
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('order_number', models.IntegerField(blank=True, db_column='OPNO', null=True)),
                ('order_date', models.DateField(db_column='OPDT')),
                ('order_quantity', models.IntegerField(db_column='ORDQTY')),
                ('adjust_quantity', models.IntegerField(blank=True, db_column='ADJQTY', null=True)),
                ('adjust_value', models.IntegerField(blank=True, db_column='ADJVALUE', null=True)),
                ('discount', models.IntegerField(blank=True, db_column='DISCOUNT', null=True)),
                ('all_quantity', models.IntegerField(blank=True, db_column='ALLQTY', null=True)),
                ('sent_quantity', models.IntegerField(blank=True, db_column='SENTQTY', null=True)),
                ('hold_quantity', models.IntegerField(blank=True, db_column='HOQTY', null=True)),
                ('status', models.CharField(blank=True, db_column='STATUS', max_length=1, null=True)),
                ('amount', models.IntegerField(db_column='AMOUNT')),
                ('order_created_date', models.DateField(blank=True, db_column='CRETDATE', null=True)),
                ('order_detail_id', models.IntegerField(blank=True, db_column='OPDTLID', null=True)),
            ],
            options={
                'db_table': 'GCP_ST06_ORD_DTL',
                'verbose_name_plural': 'Order Details',
            },
        ),
        migrations.CreateModel(
            name='OrderHeader',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('order_number', models.IntegerField(blank=True, db_column='OPNO', null=True)),
                ('sfa_order_number', models.CharField(blank=True, db_column='SFAOPNO', max_length=100, null=True)),
                ('order_date', models.DateField(db_column='OPDT')),
                ('customer_reference_number', models.CharField(blank=True, db_column='CUSREFNO', max_length=50, null=True)),
                ('customer_reference_date', models.DateField(blank=True, db_column='CUSREFDT', null=True)),
                ('fs_code', models.CharField(blank=True, db_column='FSCODE', max_length=3, null=True)),
                ('order_value', models.IntegerField(db_column='ORDVAL')),
                ('status', models.CharField(db_column='STATUS', max_length=1)),
                ('order_created_date', models.DateField(db_column='CRETDATE')),
                ('discount', models.IntegerField(blank=True, db_column='DISCTOT', null=True)),
                ('order_value_rs', models.IntegerField(blank=True, db_column='ORDVALRS', null=True)),
                ('shipped_date', models.DateField(blank=True, db_column='SHIPDT', null=True)),
            ],
            options={
                'db_table': 'GCP_ST05_ORD_HDR',
                'verbose_name_plural': 'Order Header',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('price_code', models.IntegerField(db_column='PRICECODE')),
                ('with_effect_from', models.DateField(db_column='WEFDATE')),
                ('price', models.IntegerField(db_column='PRICE')),
            ],
            options={
                'db_table': 'GCP_SM62_PRI_DTL',
                'verbose_name_plural': 'Price',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('code', models.IntegerField(db_column='GRPCODE', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='GRPNAME', max_length=55)),
            ],
            options={
                'db_table': 'GCP_SM23_PDT_GRP',
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.CreateModel(
            name='ProductMaster',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('product_code', models.IntegerField(db_column='PRODCODE', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='PRODDESC', max_length=60)),
                ('size', models.CharField(db_column='PSIZE', max_length=10)),
                ('length', models.CharField(db_column='PRODLENG', max_length=10)),
                ('count', models.IntegerField(db_column='PRODCNT')),
                ('unit', models.CharField(db_column='UNIT', max_length=5)),
            ],
            options={
                'db_table': 'GCP_SM22_PDT',
                'verbose_name_plural': 'Product Master',
            },
        ),
        migrations.CreateModel(
            name='ProductSubCategory',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('code', models.IntegerField(db_column='SUBGRP')),
                ('description', models.CharField(db_column='SGRPDESC', max_length=55)),
            ],
            options={
                'db_table': 'GCP_SM25_PDT_SUG',
                'verbose_name_plural': 'Product SubCategories',
            },
        ),
        migrations.CreateModel(
            name='StockMaster',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('month', models.DateField(db_column='MONTH')),
                ('stock_flag', models.CharField(db_column='STKFLG', max_length=1)),
                ('op_number', models.IntegerField(db_column='OPNO')),
                ('op_date', models.DateField(db_column='OPDT')),
                ('op_stock', models.IntegerField(db_column='OPSTK')),
                ('quantity_received', models.IntegerField(db_column='QTYRECD')),
                ('all_quantity', models.IntegerField(db_column='ALLQTY')),
                ('clear_stock', models.IntegerField(db_column='CLSTK')),
                ('free_stock', models.IntegerField(db_column='FREESTOCK')),
            ],
            options={
                'db_table': 'GCP_WM01_STK_MAS',
                'verbose_name_plural': 'Stock Master',
            },
        ),
        migrations.CreateModel(
            name='TariffMaster',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('tariff_id', models.IntegerField(db_column='TARIFFID', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='TARIFF_DES', max_length=80)),
                ('hsn_code', models.CharField(db_column='HSNCODE', max_length=8)),
                ('gst', models.DecimalField(db_column='GSTPER', decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'GCP_SM27_TARIFF_MAS',
                'verbose_name_plural': 'Tariff Master',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_column='USERID')),
                ('user_name', models.CharField(db_column='USERNAME', max_length=40)),
                ('dept_code', models.IntegerField(db_column='DEPTCODE')),
                ('created_by', models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_user_set', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_user_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'GCP_AM03_USR_HDR',
                'verbose_name_plural': 'User',
            },
        ),
        migrations.CreateModel(
            name='TariffHeader',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True, db_column=b'DJCREATEDDATE')),
                ('modified_date', models.DateTimeField(auto_now=True, db_column=b'DJMODIFIEDDATE')),
                ('is_sync', models.BooleanField(db_column=b'ISSYNC', default=False)),
                ('category', models.OneToOneField(db_column='GRPCODE', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='connector.ProductCategory')),
                ('name', models.CharField(db_column='GRPNAME', max_length=150)),
                ('type', models.CharField(db_column='GRPTYPE', max_length=2)),
                ('created_by', models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_tariffheader_set', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_tariffheader_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'GCP_SM27_TARIFF_HDR',
                'verbose_name_plural': 'Tariff Header',
            },
        ),
        migrations.AddField(
            model_name='tariffmaster',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_tariffmaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tariffmaster',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_tariffmaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockmaster',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_stockmaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockmaster',
            name='depo_code',
            field=models.ForeignKey(db_column='DEPOCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.DepoMaster'),
        ),
        migrations.AddField(
            model_name='stockmaster',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_stockmaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockmaster',
            name='product_code',
            field=models.ForeignKey(db_column='PRODCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.ProductMaster'),
        ),
        migrations.AddField(
            model_name='productsubcategory',
            name='category',
            field=models.ForeignKey(db_column='GRPCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.ProductCategory'),
        ),
        migrations.AddField(
            model_name='productsubcategory',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_productsubcategory_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productsubcategory',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_productsubcategory_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productmaster',
            name='category',
            field=models.ForeignKey(db_column='GRPCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.ProductCategory'),
        ),
        migrations.AddField(
            model_name='productmaster',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_productmaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productmaster',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_productmaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productmaster',
            name='sub_category',
            field=models.ForeignKey(db_column='SUBGRP', on_delete=django.db.models.deletion.CASCADE, to='connector.ProductSubCategory'),
        ),
        migrations.AddField(
            model_name='productmaster',
            name='tariff',
            field=models.ForeignKey(db_column='TARIFFID', on_delete=django.db.models.deletion.CASCADE, to='connector.TariffMaster'),
        ),
        migrations.AddField(
            model_name='productcategory',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_productcategory_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productcategory',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_productcategory_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='price',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_price_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='price',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_price_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='price',
            name='product_code',
            field=models.ForeignKey(db_column='PRODCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.ProductMaster'),
        ),
        migrations.AddField(
            model_name='orderheader',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_orderheader_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderheader',
            name='customer_code',
            field=models.ForeignKey(db_column='CUSTCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.CustomerMaster'),
        ),
        migrations.AddField(
            model_name='orderheader',
            name='depo_code',
            field=models.ForeignKey(db_column='DEPOCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.DepoMaster'),
        ),
        migrations.AddField(
            model_name='orderheader',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_orderheader_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_orderdetails_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_orderdetails_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='order',
            field=models.ForeignKey(db_column='ORDID', on_delete=django.db.models.deletion.CASCADE, to='connector.OrderHeader'),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='product_code',
            field=models.ForeignKey(db_column='PRODCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.ProductMaster'),
        ),
        migrations.AddField(
            model_name='market',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_market_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='market',
            name='depo_code',
            field=models.ForeignKey(db_column='DEPOCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.DepoMaster'),
        ),
        migrations.AddField(
            model_name='market',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_market_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoiceheader',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_invoiceheader_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoiceheader',
            name='customer_code',
            field=models.ForeignKey(db_column='CUSTCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.CustomerMaster'),
        ),
        migrations.AddField(
            model_name='invoiceheader',
            name='depo_code',
            field=models.ForeignKey(db_column='DEPOCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.DepoMaster'),
        ),
        migrations.AddField(
            model_name='invoiceheader',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_invoiceheader_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoicedetails',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_invoicedetails_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoicedetails',
            name='invoice_header',
            field=models.ForeignKey(db_column='INVHDR', on_delete=django.db.models.deletion.CASCADE, to='connector.InvoiceHeader'),
        ),
        migrations.AddField(
            model_name='invoicedetails',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_invoicedetails_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoicedetails',
            name='product_code',
            field=models.ForeignKey(db_column='PRODCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.ProductMaster'),
        ),
        migrations.AddField(
            model_name='invoicedetails',
            name='tarrifid',
            field=models.ForeignKey(db_column='TARIFFID', on_delete=django.db.models.deletion.CASCADE, to='connector.TariffMaster'),
        ),
        migrations.AddField(
            model_name='divisionmaster',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_divisionmaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='divisionmaster',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_divisionmaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='depomaster',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_depomaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='depomaster',
            name='division_code',
            field=models.ForeignKey(db_column='DIVNCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.DivisionMaster'),
        ),
        migrations.AddField(
            model_name='depomaster',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_depomaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customermaster',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_customermaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customermaster',
            name='depo_code',
            field=models.ForeignKey(db_column='DEPOCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.DepoMaster'),
        ),
        migrations.AddField(
            model_name='customermaster',
            name='market_code',
            field=models.ForeignKey(blank=True, db_column='MKTCODE', null=True, on_delete=django.db.models.deletion.CASCADE, to='connector.Market'),
        ),
        migrations.AddField(
            model_name='customermaster',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_customermaster_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collectionheader',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_collectionheader_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collectionheader',
            name='customer_code',
            field=models.ForeignKey(db_column='CUSTCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.CustomerMaster'),
        ),
        migrations.AddField(
            model_name='collectionheader',
            name='depo_code',
            field=models.ForeignKey(db_column='DEPOCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.DepoMaster'),
        ),
        migrations.AddField(
            model_name='collectionheader',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_collectionheader_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collectiondetails',
            name='collection',
            field=models.ForeignKey(db_column='COLID', on_delete=django.db.models.deletion.CASCADE, to='connector.CollectionHeader'),
        ),
        migrations.AddField(
            model_name='collectiondetails',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column=b'DJCREATEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_collectiondetails_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collectiondetails',
            name='depo_code',
            field=models.ForeignKey(db_column='DEPOCODE', on_delete=django.db.models.deletion.CASCADE, to='connector.DepoMaster'),
        ),
        migrations.AddField(
            model_name='collectiondetails',
            name='invoice_code',
            field=models.ForeignKey(blank=True, db_column='INVNO', null=True, on_delete=django.db.models.deletion.CASCADE, to='connector.InvoiceHeader'),
        ),
        migrations.AddField(
            model_name='collectiondetails',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_column=b'DJMODIFIEDBY', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_collectiondetails_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collectiondetails',
            name='order_code',
            field=models.ForeignKey(blank=True, db_column='OPNO', null=True, on_delete=django.db.models.deletion.CASCADE, to='connector.OrderHeader'),
        ),
        migrations.AddField(
            model_name='collectiondetails',
            name='tariff_id',
            field=models.ForeignKey(blank=True, db_column='TARIFFID', null=True, on_delete=django.db.models.deletion.CASCADE, to='connector.TariffMaster'),
        ),
        migrations.AddField(
            model_name='tariffmaster',
            name='tariff_header',
            field=models.ForeignKey(db_column='TARIFFHD', on_delete=django.db.models.deletion.CASCADE, to='connector.TariffHeader'),
        ),
        migrations.AlterUniqueTogether(
            name='stockmaster',
            unique_together=set([('product_code', 'month', 'depo_code', 'stock_flag', 'op_number', 'op_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='productsubcategory',
            unique_together=set([('code', 'category')]),
        ),
        migrations.AlterUniqueTogether(
            name='price',
            unique_together=set([('price_code', 'with_effect_from', 'product_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='orderheader',
            unique_together=set([('order_number', 'order_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='orderdetails',
            unique_together=set([('order_number', 'order_date', 'product_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='market',
            unique_together=set([('market_code', 'depo_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='collectionheader',
            unique_together=set([('depo_code', 'receipt_number')]),
        ),
    ]
